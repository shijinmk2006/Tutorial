for (int i = 1; i <= worksheet.Cells.MaxDataRow; i++)
{
    DateTime payDate = worksheet.Cells[i, offCycleFilterColumns[OffCycleFilter.PayrollPayDate]].DateTimeValue;

    DateTime endDate;

    if (offCycleFilterColumns.ContainsKey(OffCycleFilter.PeriodEndDate))
        endDate = worksheet.Cells[i, offCycleFilterColumns[OffCycleFilter.PeriodEndDate]].DateTimeValue;
    else // if offCycleFilterColumns.ContainsKey(OffCycleFilter.ProcessEndDate))
        endDate = worksheet.Cells[i, offCycleFilterColumns[OffCycleFilter.ProcessEndDate]].DateTimeValue;

    string payCycleName = worksheet.Cells[i, offCycleFilterColumns[OffCycleFilter.PayCycle]].StringValue.Trim().ToUpper();

    if (!payCycles.ContainsKey(payCycleName))
        continue;

    PayCycle payCycle = payCycles[payCycleName];

    if (!rows.ContainsKey((payDate, endDate, payCycle)))
        rows.Add((payDate, endDate, payCycle), new List<int>());

    rows[(payDate, endDate, payCycle)].Add(i);
}



var result = worksheet .SelectMany (row => new[] {row [offCycleFilterColumns [OffCycleFilter.PayrollPayDate]], row [offCycleFilterColumns [OffCycleFilter.PeriodEndDate]]}, (row1, row2) => new {row1.DateTimeValue, row2.DateTimeValue}) .Where (row => !payCycles.ContainsKey (row.payCycleName)) .SelectMany (row => new[] {row.payDate, row.endDate}, (row1, row2) => new {row1, row2}) .Where (pair => !rows.ContainsKey ((pair.row1, pair.row2))) .SelectMany (pair => new[] {pair.row1, pair.row2}, (pair1, pair2) => new {pair1.i, pair2.i}) .ToList ();
