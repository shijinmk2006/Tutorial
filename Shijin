
Dictionary<(DateTime, DateTime, PayCycle), List<int>> ParseOffCycleFilterRows(Worksheet worksheet, Dictionary<OffCycleFilter, int> offCycleFilterColumns)
{

    Dictionary<(DateTime, DateTime, PayCycle), List<int>> rows = new();

    // Get pay cycle values from database
    Dictionary<string, PayCycle> payCycles = new()
    {
        { "Monthly".Trim().ToUpper(), PayCycle.Monthly },
        { "SemiMonthly".Trim().ToUpper(), PayCycle.SemiMonthly },
        { "EL Semi-Monthly".Trim().ToUpper(), PayCycle.SemiMonthly },
        { "PR Semi-Monthly".Trim().ToUpper(), PayCycle.SemiMonthly },
        { "Weekly".Trim().ToUpper(), PayCycle.Weekly },
        { "Aveda Weekly".Trim().ToUpper(), PayCycle.Weekly },
        { "EL Weekly".Trim().ToUpper(), PayCycle.Weekly },
        { "Northtec Weekly".Trim().ToUpper(), PayCycle.Weekly },
        { "PR Weekly".Trim().ToUpper(), PayCycle.Weekly }
    };

    for (int i = 1; i <= worksheet.Cells.MaxDataRow; i++)
    {
        DateTime payDate = worksheet.Cells[i, offCycleFilterColumns[OffCycleFilter.PayrollPayDate]].DateTimeValue;

        DateTime endDate;

        if (offCycleFilterColumns.ContainsKey(OffCycleFilter.PeriodEndDate))
            endDate = worksheet.Cells[i, offCycleFilterColumns[OffCycleFilter.PeriodEndDate]].DateTimeValue;
        else // if offCycleFilterColumns.ContainsKey(OffCycleFilter.ProcessEndDate))
            endDate = worksheet.Cells[i, offCycleFilterColumns[OffCycleFilter.ProcessEndDate]].DateTimeValue;

        string payCycleName = worksheet.Cells[i, offCycleFilterColumns[OffCycleFilter.PayCycle]].StringValue.Trim().ToUpper();

        if (!payCycles.ContainsKey(payCycleName))
            continue;

        PayCycle payCycle = payCycles[payCycleName];

        if (!rows.ContainsKey((payDate, endDate, payCycle)))
            rows.Add((payDate, endDate, payCycle), new List<int>());

        rows[(payDate, endDate, payCycle)].Add(i);
    }

    return rows;
}
public enum OffCycleFilter
{
    PayrollPayDate,
    PeriodEndDate,
    ProcessEndDate,
    PayCycle
}

public enum PayCycle
{
    Monthly,
    SemiMonthly,
    Weekly
}
